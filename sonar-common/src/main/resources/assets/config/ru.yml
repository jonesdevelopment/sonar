#
#   /$$$$$$
#  /$$__  $$
# | $$  \__/  /$$$$$$  /$$$$$$$   /$$$$$$   /$$$$$$
# |  $$$$$$  /$$__  $$| $$__  $$ |____  $$ /$$__  $$
#  \____  $$| $$  \ $$| $$  \ $$  /$$$$$$$| $$  \__/
#  /$$  \ $$| $$  | $$| $$  | $$ /$$__  $$| $$
# |  $$$$$$/|  $$$$$$/| $$  | $$|  $$$$$$$| $$
#  \______/  \______/ |__/  |__/ \_______/|__/
#
# Нужна помощь или есть вопросы? https://jonesdev.xyz/discord
# Исходный код: https://github.com/jonesdevelopment/sonar
# Copyright Jones Development and Sonar Contributors, licensed under GPL-3.0
#

# Основные настройки
general:
  # Должен ли Sonar логировать IP-адреса игроков в консоли?
  log-player-addresses: true
  # Максимальное количество игроков онлайн с одного IP-адреса
  max-online-per-ip: 3

# Настройки чувствительности для трекера атак
# Редактируйте это только в том случае, если вы знаете, что делаете.
attack-tracker:
  # Минимальное количество новых игроков, чтобы атака была обнаружена
  min-players-for-attack: 8
  # Количество времени, которое должно пройти, чтобы атака закончилась
  # (Это значение представляет собой время в миллисекундах: 1 секунда = 1000 миллисекунд)
  min-attack-duration: 30000
  # Количество раз, которое необходимо сообщить об инциденте, чтобы он был признан атакой.
  # Это число служит буфером для отсеивания ложных уведомлений об атаках
  min-attack-threshold: 2
  # Количество времени, которое должно пройти, чтобы новая атака была обнаружена.
  # (Это значение представляет время в миллисекундах: 1 секунда = 1000 миллисекунд)
  attack-cooldown-delay: 3000

# Вы можете подключить Sonar к базе данных, чтобы сохранять проверенных игроков даже после перезапуска сервера.
# Примечание: IP-адреса сохраняются в виде обычного текста. Вы сами отвечаете за сохранность своей базы данных!
database:
  # Тип базы данных, которую Sonar использует для хранения проверенных игроков.
  # Возможные типы: NONE, MYSQL, MARIADB
  type: NONE
  # Адрес хоста для аутентификации в базе данных SQL
  host: localhost
  # Порт для аутентификации с базой данных SQL
  port: 3306
  # Имя базы данных SQL
  name: sonar
  # Имя пользователя для аутентификации в базе данных SQL
  username: ''
  # Пароль для аутентификации в базе данных SQL
  password: ''
  # Сколько дней Sonar должен хранить проверенных игроков в базе данных?
  maximum-age: 5

# Каждый новый запрос на вход на сервер будет ставиться в очередь, чтобы избежать спам-атак.
# Очередь обновляется каждые 500 миллисекунд (10 тиков)
queue:
  # Максимальное количество одновременных опросов очереди за 500 миллисекунд
  max-polls: 30

# Каждый новый игрок, впервые присоединившийся на сервер, будет отправлен на
# лимбо-сервер, на котором проводятся расширенные проверки ботов
verification:
  # Когда Sonar должен проверять новых игроков?
  # Возможные типы: ALWAYS, DURING_ATTACK, NEVER
  # - ALWAYS: Новые игроки будут проверяться всегда (Рекомендуется)
  # - DURING_ATTACK: Новые игроки будут проверяться только во время атаки
  # - NEVER: Новые игроки никогда не будут проверены
  timing: ALWAYS
  checks:
    # Проверяет, следует ли движение игрока формуле гравитации Minecraft.
    # Все предсказанные движения предварительно просчитываются для экономии производительности
    gravity:
      # Должен ли Sonar проверять наличие действительной гравитации клиента? (Рекомендуется)
      enabled: true
      # Должен ли Sonar проверять, сталкивается ли игрок с блоками? (Рекомендуется)
      check-collisions: true
      # Должен ли Sonar заставлять игрока решать CAPTCHA, если он не проходит проверку на гравитацию?
      captcha-on-fail: false
      # Максимальное количество тиков, на которое должен упасть игрок, чтобы ему было разрешено упасть на платформу
      max-movement-ticks: 8
      # Максимальное количество проигнорированных изменений движения Y, прежде чем игрок не пройдет проверку
      max-ignored-ticks: 5
      # Режим игрока во время проверки
      # Возможные типы: SURVIVAL, CREATIVE, ADVENTURE
      # - SURVIVAL: все компоненты пользовательского интерфейса видны
      # - CREATIVE: здоровье и голод скрыты
      # - ADVENTURE: все компоненты пользовательского интерфейса видны
      gamemode: ADVENTURE

    # Заставить игрока ввести код с картинки в чат
    map-captcha:
      # Когда Sonar должен заставить игрока решить CAPTCHA?
      # Возможные типы: ALWAYS, DURING_ATTACK, NEVER
      # - ALWAYS: Новые игроки всегда получают капчу
      # - DURING_ATTACK: Новые игроки будут получать капчу только во время атаки
      # - NEVER: Новые игроки никогда не получат капчу (Рекомендуется)
      timing: NEVER
      # Options for the effects on the image shown to the player
      effects:
        # Добавляет свечение к изображению
        flare: true
        # Добавляет случайные линии к изображению
        scratches: true
        # Применяет искажение ряби (синусоидальное)
        ripple: true
        # Применяет горизонтальное искажение
        smear: true
        # Добавляет немного размытости/искажения к изображению
        pinch: true
        # Применяет цветокоррекцию (насыщенность цвета)
        saturation: 0.15
        # Применяет горизонтальное треугольное искажение
        distortion: 2
      # Сколько капч должен подготовить Sonar?
      # Эта задача выполняется асинхронно в фоновом режиме
      precompute: 500
      # Как долго Sonar должен ждать, пока игрок не пройдет капча?
      # (Это значение представляет время в миллисекундах: 1 секунда = 1000 миллисекунд)
      max-duration: 45000
      # Сколько раз игрок должен завалить капчу, чтобы не пройти проверку?
      max-tries: 3
      # Символы (буквы и цифры), которые разрешено использовать в ответе на капчу
      # It is not recommended to add numbers or letters that might look like one another
      dictionary: '1235689'
      # Какие типы шрифтов следует использовать в Sonar для текста в капче?
      font-names:
        - Dialog
        - DialogInput
        - SansSerif
        - Monospaced

    # Проверяет, отправляет ли игрок на сервер действительный клиентский бренд.
    client-brand:
      # Должен ли Sonar проверять наличие действительных клиентских брендов? (Рекомендуется)
      enabled: true
      # Regex для проверки брендов клиентов во время верификации
      valid-regex: ^[!-~ ]+$
      # Максимальная длина бренда клиента при проверке
      max-length: 64

    # Regex для проверки ников при верификации
    valid-name-regex: ^[a-zA-Z0-9_]+$
    # Regex для проверки локализации клиента при верификации
    valid-locale-regex: ^[a-zA-Z_]+$
    # Пинг который должен быть у игрока чтобы не пройти проверку
    # (Это значение представляет собой время в миллисекундах: 1 секунда = 1000 миллисекунд)
    max-ping: 10000
    # Максимальное количество пакетов для входа на сервер, которое игрок должен отправить, чтобы быть выгнанным
    max-login-packets: 256

  # Должен ли Sonar регистрировать новые попытки проверки?
  log-connections: true
  # Должен ли Sonar регистрировать новые попытки проверки во время атак?
  log-during-attack: false
  # Должен ли Sonar регистрировать каждое движение/изменение положения во время проверки?
  # Это не рекомендуется для рабочих серверов, но может быть полезно для выявления ошибок.
  debug-xyz-positions: false
  # Количество времени, которое должно пройти, прежде чем игрока кикнет.
  # (Это значение представляет время в миллисекундах: 1 секунда = 1000 миллисекунд)
  read-timeout: 3500
  # Сколько времени игрок должен ждать перед повторным подключением во время проверки
  # (Это значение представляет время в миллисекундах: 1 секунда = 1000 миллисекунд)
  rejoin-delay: 8000
  # Как долго IP-адресу должно быть запрещено входить на сервер, если он слишком часто не проходит проверку?
  # (Это значение представляет время в миллисекундах: 1 секунда = 1000 миллисекунд)
  blacklist-time: 600000
  # Как часто игрок должен проваливать проверку, чтобы попасть в черный список?
  # (Установите это значение на 0, чтобы полностью отключить черный список)
  blacklist-threshold: 2
  # Список протоколов, которые не проверяются Sonar (обход проверки)
  # Полный список всех идентификаторов протоколов можно найти здесь:
  # https://wiki.vg/Protocol_version_numbers
  # Например, Minecraft 1.20 имеет ID 763.
  whitelisted-protocols: []
  # Список протоколов, которые вообще не могут присоединиться к серверу
  blacklisted-protocols: []
