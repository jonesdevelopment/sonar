#
#   /$$$$$$
#  /$$__  $$
# | $$  \__/  /$$$$$$  /$$$$$$$   /$$$$$$   /$$$$$$
# |  $$$$$$  /$$__  $$| $$__  $$ |____  $$ /$$__  $$
#  \____  $$| $$  \ $$| $$  \ $$  /$$$$$$$| $$  \__/
#  /$$  \ $$| $$  | $$| $$  | $$ /$$__  $$| $$
# |  $$$$$$/|  $$$$$$/| $$  | $$|  $$$$$$$| $$
#  \______/  \______/ |__/  |__/ \_______/|__/
#
# Potřebujete pomoc nebo máte otázky? https://jonesdev.xyz/discord
# Zdrojový kód: https://github.com/jonesdevelopment/sonar
# Copyright Jones Development a Sonar Contributors, licencováno pod GPL-3.0
#

# Obecné nastavení pro Sonar
general:
  # Měl by Sonar vypisovat IP adresy hráču do konzole?
  log-player-addresses: true
  # Maximum hráču online se stejnou IP adresou
  max-online-per-ip: 3

# Nastavení citlivosti pro sledovač útoku
# Změnte jenom pokud víte co děláte!
attack-tracker:
  # Minimum nových hráču aby sledovač zaregistroval útok
  min-players-for-attack: 8
  # Čas, který musí uběhnout aby byl útok zaregistrovan jako ukončený
  # (Hodnota udávaná v milisekundách: 1 sekunda = 1000 milisekund)
  min-attack-duration: 30000
  # Počet, kolikrát musí být incident reportován, aby byl označen jako útok
  # Toto číslo figuruje jako buffer (tlumič) na filtrovaní chybných notifikací
  min-attack-threshold: 2
  # Čas, který musí uběhnout aby byl další útok detekován
  # (Hodnota udávaná v milisekundách: 1 sekunda = 1000 milisekund)
  attack-cooldown-delay: 3000

# Můžete se připojit Sonar k databázi aby uložil ověřené hráče ponechal i po restartu serveru
# Pozn.: IP adresy nejsou jakkoliv šifrovány, naopak jsou ponechány jako čistý text! Je vaše zodpovědnost ponechat tuto databázi bezpečnou!
# Nicméně, IP adresy nemůžou být vystopovány zpátky k hráči, protože Sonar používá UUID na ukládní místo jmeno hráčů
database:
  # Typy datábázi se kterýma Sonar bude pracovat
  # Typy: NONE, MYSQL, MARIADB
  type: NONE
  # Host adresa pro verifikování hráčů s SQL databází
  host: localhost
  # Port pro verifikaci s databází
  port: 3306
  # Jméno SQL databáze
  name: sonar
  # Jméno pro verifikaci přes SQL databázi
  username: ''
  # Heslo pro verifikaci přes SQL databázi
  password: ''
  # Kolik dní by měl Sonar ponechat hráče v databázi?
  maximum-age: 5

# Každý nový login bude přidán do řady kvuli prevenci spam útoků
# Řada je aktulizována každých 1 sekund (20 ticků)
queue:
  # Maximum součastných aktualizací řady za 1 sekund
  max-polls: 30

# Každý připojený hráč bude přepojen do
# Jednoduchého limbo serveru kde proběhnou zkoušky proti botům
verification:
  # Kdy by měl Sonar verifikovat nové hráče?
  # TYPY: ALWAYS, DURING_ATTACK, NEVER (Vždy, Pouze při útoku, Nikdy)
  # - ALWAYS: Noví hráči budou vždy verifikováni (Doporučeno)
  # - DURING_ATTACK: New players will only be checked during an attack Noví hráči budou verifikováni pouze při útoku
  # - NEVER: Noví hráči nebudou nikdy vyžkoušeni
  timing: ALWAYS
  checks:
    # Kontroluje, zda pohyb hráčů je roven gravitační formuli Minecraftu
    # Všechny předpokládané pohyby jsou předpočítány, kvůli ušetření výkonu
    gravity:
      # Měl by Sonar zkoušet pro gravitaci hráče (Doporučováno)
      enabled: true
      # Měl by Sonar zkoušet jestli se hráč dotýka bloku? (Doporučováno)
      check-collisions: true
      # Měl by Sonar přimět hráče, aby vyřešil CAPTCHA, pokud neuspějí při kontrole gravitace?
      captcha-on-fail: false
      # Maximální počet ticků, který má hráč padat aby byl puštěn na verifikační platformu
      max-movement-ticks: 8
      # Gamemode hráče při verifikaci
      # Typy: SURVIVAL, CREATIVE, ADVENTURE
      # - SURVIVAL: všechny komponenty UI jsou zobrazeny
      # - CREATIVE: životy a hunger neni zobrazen
      # - ADVENTURE: všechny komponenty UI jsou zobrazeny
      gamemode: ADVENTURE

    # Kontroluje, zda klient odesílá správné pakety při montáži vozidla
    vehicle:
      # Typy: ALWAYS, DURING_ATTACK, NEVER
      # - ALWAYS: Noví hráči budou vždy namontováni na vozidle (Doporučeno)
      # - DURING_ATTACK: Noví hráči budou namontováni na vozidlo pouze během útoku
      # - NEVER: Noví hráči nebudou nikdy namontováni na vozidlo
      timing: ALWAYS

    # Nechá hráče verifikovat pomocí kódu na mapě ve hře
    map-captcha:
      # Kdy by měl Sonar nechat hráče verifikovat pomocí mapy?
      # Typy: ALWAYS, DURING_ATTACK, NEVER
      # - ALWAYS: Noví hráči budou vždy verifikováni pomocí CAPTCHY?
      # - DURING_ATTACK: Noví hráči dostanou map captchu jenom při útoku
      # - NEVER: Noví hráči nikdy nedostanou map CAPTCHU (Doporučeno)
      timing: NEVER
      # Možnosti efektů na obrázek zobrazený přehrávači
      effects:
        # Přidá do obrázku efekt záře
        flare: true
        # Přidá do obrázku náhodné čáry
        scratches: true
        # Přidá filtr zvlnění (sinus) zkreslení
        ripple: true
        # Přidá horizontální filtr zkreslení
        smear: true
        # Dodává obrazu trochu rozmazání/zkreslení
        pinch: true
        # Použije korekci barev (sytost barev)
        saturation: 0.15
        # Přidá horizontální trojúhelníkový filtr zvlnění
        distortion: 2
      # Kolik odpovědí by měl Sonar předgenerovat?
      # Tento úkol běží souběžně v pozadí
      precompute: 500
      # Jak dlouho by měl Sonar čekat než hráč selže CAPTCHU?
      # (Hodnota udávaná v milisekundách: 1 sekunda = 1000 milisekund)
      max-duration: 30000
      # Kolikrát musí hráč selhat CAPTCHU před celkovém selhání verifikace?
      max-tries: 3
      # Znaky (čísla a písmena), které jsou povoleny k zobrazování v CAPTCHE
      # Nedoporučuje se přidávat čísla nebo písmena, která by se mohla navzájem podobat
      dictionary: '1235689'
      # Jaké typy fontů by měl Sonar používat pro map CAPTCHU?
      font-names:
        - Dialog
        - DialogInput
        - SansSerif
        - Monospaced

    # Zkouší pokuď hráč posílá správný "client brand packet" serveru
    client-brand:
      # Měl by Sonar zkoušet pro validitu "client brandu"? (Doporučeno)
      enabled: true
      # Regex pro validitaci "client brand"
      valid-regex: ^[!-~ ]+$
      # Maximální délka "client brand" při verifikaci
      max-length: 64

    # Regex pro validování jmen při verifikaci
    valid-name-regex: ^[a-zA-Z0-9_]+$
    # Regex pro validaci "client locale" při verifikaci
    valid-locale-regex: ^[a-zA-Z_]+$
    # Maximální odezva hráče aby byl odpojen
    # (Hodnota udávaná v milisekundách: 1 sekunda = 1000 milisekund)
    max-ping: 10000
    # Maximální počet login packetů, který musí hřáč poslat aby byl vyhozen
    max-login-packets: 256

  # Je-li povoleno, přehrávač bude přenesen zpět na původní server
  # po úspěšném absolvování ověření robota.
  # Tuto funkci představil Mojang ve verzi Minecraft 1.20.5
  transfer:
    # Měl by Sonar přenést hráče na původní server (místo toho, aby je kopl)?
    # Aby to fungovalo, musíte tuto funkci povolit v konfiguraci vašeho serveru
    # Kromě toho možná budete chtít snížit množství omezení rychlosti přihlášení
    # provádí Velocity nebo jiné proxy/pluginy, protože to může zabránit
    # hráč nebyl převeden správně.
    enabled: false
    # Na který server by měl Sonar přenést přehrávač, když projde ověřením?
    # Zadejte IP serveru, který hráči používají k běžnému připojení k vašemu serveru.
    # Například můžete zadat "mc.hypixel.net" nebo přímou IP jako "1.1.1.1"
    destination-host: "play.my-server.com"
    # Jaký port by měl Sonar použít při přenosu přehrávače na původní server?
    # Pokud váš server nepotřebuje port pro připojení, můžete toto ponechat jako 25565.
    destination-port: 25565

  # Měl by Sonar posílat nové verifikace?
  log-connections: true
  # Měl by Sonar posílat nové verifikace při útoku?
  log-during-attack: false
  # Měl by Sonar posílat každý jeden pohyb při verifikaci?
  # Toto nastavení není doporučeno pro servry v produkci, ale může být nápomocné při vyhledávaní chyb
  debug-xyz-positions: false
  # Měl by Sonar také kontrolovat hráče Geyser (Bedrock)?
  # Tato funkce je experimentální a může způsobit problémy
  # Pokud je toto zakázáno, hráči Bedrock budou přeskočeni
  check-geyser-players: true
  # Množství času který musí uběhnout aby hráč byl odpojen
  # (Hodnota udávaná v milisekundách: 1 sekunda = 1000 milisekund)
  read-timeout: 8000
  # Jak dlouho by měl hráč čekat, než se při ověřování znovu připojí
  # (Hodnota udávaná v milisekundách: 1 sekunda = 1000 milisekund)
  rejoin-delay: 8000
  # Jak dlouho by si měl Sonar pamatovat počet neúspěšných ověření hráče?
  # (Hodnota udávaná v milisekundách: 1 sekunda = 1000 milisekund)
  remember-time: 120000
  # Jak dlouho by měla být IP adresa zakázána k připojení po selhání verifikace mockrát?
  # (Hodnota udávaná v milisekundách: 1 sekunda = 1000 milisekund)
  blacklist-time: 600000
  # Kolikrát musí hráč selhat verifikaci aby byl přídán do černé listiny
  # (Pokuď černou listinu nechcete dejte tuto hodnotu na 0)
  blacklist-threshold: 2
  # List ID protokolů (verzí), které nebudou kontrolovány Sonarem (bypass verifikace)
  # Celý list ID protokolů můžete najít zde
  # https://wiki.vg/Protocol_version_numbers
  # Například, Minecraft 1.20 má ID 763.
  whitelisted-protocols: []
  # List ID protokolů které se nebudou moct připojit vůbec
  blacklisted-protocols: []
