#
#   /$$$$$$
#  /$$__  $$
# | $$  \__/  /$$$$$$  /$$$$$$$   /$$$$$$   /$$$$$$
# |  $$$$$$  /$$__  $$| $$__  $$ |____  $$ /$$__  $$
#  \____  $$| $$  \ $$| $$  \ $$  /$$$$$$$| $$  \__/
#  /$$  \ $$| $$  | $$| $$  | $$ /$$__  $$| $$
# |  $$$$$$/|  $$$$$$/| $$  | $$|  $$$$$$$| $$
#  \______/  \______/ |__/  |__/ \_______/|__/
#
# Need help or have questions? https://jonesdev.xyz/discord
# Source code: https://github.com/jonesdevelopment/sonar
# Copyright Jones Development and Sonar Contributors, licensed under GPL-3.0
#

# Paramètres généraux du sonar
general:
  # Doit Sonar enregistrer les adresses IP des joueurs dans la console ?
  log-player-addresses: true
  # Nombre maximum de joueurs en ligne avec la même adresse IP
  max-online-per-ip: 3

# Paramètres de sensibilité pour le traqueur d'attaques
# Ne modifiez cela que si vous savez ce que vous faites
attack-tracker:
  # Nombre minimum de nouveaux joueurs pour qu'une attaque soit détectée
  min-players-for-attack: 8
  # Durée nécessaire pour qu'une attaque soit terminée
  # (Cette valeur représente le temps en millisecondes : 1 seconde = 1000 millisecondes)
  min-attack-duration: 30000
  # Nombre de fois qu'un incident doit être signalé pour être reconnu comme une attaque
  # Ce nombre sert de tampon pour filtrer les fausses notifications d'attaque
  min-attack-threshold: 2
  # Durée nécessaire pour détecter une nouvelle attaque
  # (Cette valeur représente le temps en millisecondes : 1 seconde = 1000 millisecondes)
  attack-cooldown-delay: 3000

# Vous pouvez connecter Sonar à une base de données pour conserver les joueurs vérifiés même après le redémarrage de votre serveur
# Remarque : les adresses IP sont enregistrées en texte brut. Vous êtes responsable de la sécurité de votre base de données !
# Cependant, les adresses IP ne peuvent pas être retracées jusqu'aux joueurs, car Sonar utilise des UUID à la place des noms d'utilisateur
database:
  # Type de base de données que Sonar utilise pour stocker les joueurs vérifiés
  # Types possibles : NONE, MYSQL
  type: NONE
  # URL pour l'authentification avec la base de données SQL
  url: localhost
  # Port pour l'authentification avec la base de données SQL
  port: 3306
  # Nom de la base de données SQL
  name: sonar
  # Nom d'utilisateur pour l'authentification avec la base de données SQL
  username: ''
  # Mot de passe pour l'authentification avec la base de données SQL
  password: ''
  # Pendant combien de jours Sonar doit-il conserver les joueurs vérifiés dans la base de données ?
  maximum-age: 5

# Chaque nouvelle demande de connexion sera mise en file d'attente pour éviter les attaques de connexion par spam
# La file d'attente est mise à jour toutes les 500 millisecondes (10 ticks)
queue:
  # Nombre maximum de sondages en file d'attente simultanés par tranche de 500 millisecondes
  max-polls: 30

# Chaque nouveau joueur qui se connecte pour la première fois sera envoyé à
# un serveur limbo léger où des vérifications de bot avancées sont effectuées
verification:
  # Quand Sonar doit-il vérifier les nouveaux joueurs ?
  # Types possibles : TOUJOURS, PENDANT_ATTAQUE, JAMAIS
  # - ALWAYS : les nouveaux joueurs seront toujours vérifiés (Recommandé)
  # - DURING_ATTACK : les nouveaux joueurs ne seront vérifiés que pendant une attaque
  # - NEVER : les nouveaux joueurs ne seront jamais vérifiés
  timing: ALWAYS
  checks:
    # Vérifie si le mouvement de chute des joueurs suit la formule de la gravité de Minecraft
    # Tous les mouvements prédits sont précalculés pour économiser les performances
    gravity:
      # Sonar doit-il vérifier la gravité client valide ? (Recommandé)
      enabled: true
      # Sonar doit-il vérifier si le joueur entre en collision avec des blocs ? (Recommandé)
      check-collisions: true
      # Nombre maximum de ticks que le joueur a pour tomber afin de pouvoir toucher la plate-forme
      max-movement-ticks: 8
      # Nombre maximum de changements de mouvement Y ignorés avant qu'un joueur ne rate la vérification
      max-ignored-ticks: 5
      # Le mode de jeu du joueur pendant la vérification
      # Types possibles : SURVIE, CRÉATIF, AVENTURE
      # - SURVIVAL : tous les composants de l'interface utilisateur sont visibles
      # - CREATIVE : la santé et la faim sont masquées
      # - ADVENTURE : tous les composants de l'interface utilisateur sont visibles
      gamemode: ADVENTURE

    # Faire taper au joueur un code à partir d'une carte virtuelle dans le chat
    map-captcha:
      # Quand Sonar doit-il faire résoudre un CAPTCHA au joueur ?
      # Types possibles : TOUJOURS, PENDANT_ATTAQUE, JAMAIS
      # - ALWAYS : les nouveaux joueurs recevront toujours un CAPTCHA
      # - DURING_ATTACK : les nouveaux joueurs ne recevront un CAPTCHA que pendant une attaque
      # - NEVER : les nouveaux joueurs ne recevront jamais de CAPTCHA (Recommandé)
      timing: NEVER
      # Sonar doit-il randomiser la position X et Y du CAPTCHA ?
      random-position: true
      # Dans quelle mesure Sonar doit-il déformer les caractères (facteur de randomisation) ?
      distortions-factor-x: 50
      # Dans quelle mesure Sonar doit-il déformer les caractères (facteur de randomisation) ?
      distortions-factor-y: 50
      # Combien de lignes aléatoires derrière le CAPTCHA Sonar doit-il dessiner ?
      random-lines: 4
      # Combien d'ovale aléatoires derrière le CAPTCHA Sonar doit-il dessiner ?
      random-ovals: 1
      # Sonar doit-il randomiser la taille de la police utilisée pour rendre le CAPTCHA ?
      random-font-size: true
      # Combien de réponses Sonar doit-il préparer ?
      # Cette tâche se déroule de manière asynchrone en arrière-plan ;
      # Les joueurs peuvent se connecter une fois qu'un CAPTCHA a été préparée
      precompute: 1000
      # Combien de temps Sonar doit-il attendre avant que le joueur ne rate le CAPTCHA ?
      # (Cette valeur représente le temps en millisecondes : 1 seconde = 1000 millisecondes)
      max-duration: 45000
      # Combien de fois un joueur doit-il échouer au CAPTCHA avant d'échouer à la vérification ?
      max-tries: 3
      # Caractères (lettres et chiffres) autorisés à apparaître dans la réponse au CAPTCHA
      dictionary: '123456789'
      # Quels types de polices Sonar doit-il utiliser pour les codes de CAPTCHA de la carte ?
      fonts:
        - Dialog
        - DialogInput
        - Serif
        - SansSerif

    # Vérifie si les joueurs envoient une marque client valide au serveur
    client-brand:
      # Sonar doit-il vérifier les marques client valides ? (Recommandé)
      enabled: true
      # Regex pour valider les marques client pendant la vérification
      valid-regex: ^[!-~ ]+$
      # Longueur maximale de la marque client pendant la vérification
      max-length: 64

    # Regex pour valider les noms d'utilisateur pendant la vérification
    valid-name-regex: ^[a-zA-Z0-9_]+$
    # Regex pour valider le paramètre régional client pendant la vérification
    valid-locale-regex: ^[a-zA-Z_]+$
    # Ping qu'un joueur doit avoir pour dépasser le délai d'attente
    # (Cette valeur représente le temps en millisecondes : 1 seconde = 1000 millisecondes)
    max-ping: 10000
    # Nombre maximum de paquets de connexion que le joueur doit envoyer pour être expulsé
    max-login-packets: 256

  # Sonar doit-il journaliser les nouvelles tentatives de vérification ?
  log-connections: true
  # Sonar doit-il journaliser les nouvelles tentatives de vérification pendant les attaques ?
  log-during-attack: false
  # Sonar doit-il journaliser chaque changement de mouvement/position pendant la vérification ?
  # Ceci n'est pas recommandé pour les serveurs de production, mais peut être utile pour repérer les erreurs.
  debug-xyz-positions: false
  # Durée nécessaire avant qu'un joueur ne dépasse le délai d'attente
  # (Cette valeur représente le temps en millisecondes : 1 seconde = 1000 millisecondes)
  read-timeout: 3500
  # Combien de temps un joueur doit-il attendre avant de se reconnecter pendant la vérification
  # (Cette valeur représente le temps en millisecondes : 1 seconde = 1000 millisecondes)
  rejoin-delay: 8000
  # Combien de temps une adresse IP doit-elle être interdite de connexion en cas d'échec trop fréquent de la vérification ?
  # (Cette valeur représente le temps en millisecondes : 1 seconde = 1000 millisecondes)
  blacklist-time: 600000
  # À quelle fréquence un joueur doit-il échouer à la vérification pour être mis sur blacklist ?
  # (Définissez cette valeur sur 0 pour désactiver la blacklist entièrement)
  blacklist-threshold: 2
  # Liste des identifiants de protocole qui ne sont pas vérifiés par Sonar (contournement de la vérification)
  # Vous pouvez trouver la liste complète de tous les identifiants de protocole ici :
  # https://wiki.vg/Protocol_version_numbers
  # Par exemple, Minecraft 1.20 a l'identifiant 763.
  whitelisted-protocols: []
  # Liste des identifiants de protocole qui ne peuvent pas du tout rejoindre le serveur
  blacklisted-protocols: []
